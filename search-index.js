var searchIndex = {};
searchIndex['rmqtt'] = {"items":[[3,"MqttSessionBuilder","rmqtt","A structure that can be used to connect to mqtt-broker and build a session.",null,null],[3,"MqttSession","","This structure represents a mqtt session. It can be created using `MqttSessionBuilder`.",null,null],[3,"ReceivedMessage","","Message received from broker. It contains information about `topic` to which this\nmessage has been sent and `payload` of this message as bytes vector.",null,null],[12,"topic","","",0,null],[12,"payload","","",0,null],[3,"SubscribeResult","","Result of `subscribe` method.",null,null],[12,"packet_id","","",1,null],[3,"UnsubscribeResult","","Result of `unsubscribe` method.",null,null],[12,"packet_id","","",2,null],[4,"PublishResult","","`PublishResult` of messages published with quality of service 0 is always `Ready` (the\npublishing is complete). Other messages must be acknowledged by broker. In this case\nthe result of publishing must by checked using method `await_publish_completion`. This method\nuses `packet_id` contained in `PublishResult::NotComplete`, returned by `publish` method,\nas its argument.",null,null],[13,"Ready","","Messages published with quality of service 0 are always `Ready`.",3,null],[13,"NotComplete","","",3,null],[12,"packet_id","rmqtt::PublishResult","",3,null],[4,"ConnectFailed","rmqtt","Errors that can occure while trying to connect to mqtt broker.",null,null],[13,"UnexpectedPacket","","",4,null],[13,"UnacceptableProtocol","","",4,null],[13,"IdentifierRejected","","",4,null],[13,"ServerUnavailable","","",4,null],[13,"BadCredentials","","",4,null],[13,"NotAuthorized","","",4,null],[13,"InvalidReturnCode","","",4,null],[13,"ConnectionError","","",4,null],[12,"details","rmqtt::ConnectFailed","",4,null],[4,"ReceiveFailed","rmqtt","Possible results of the `MqttSession.await_*` methods.",null,null],[13,"Timeout","","",5,null],[13,"ConnectionError","","",5,null],[12,"details","rmqtt::ReceiveFailed","",5,null],[11,"new","rmqtt","Creates a new `MqttSessionBuilder`.",6,{"inputs":[{"name":"mqttsessionbuilder"},{"name":"str"},{"name":"str"}],"output":{"name":"mqttsessionbuilder"}}],[11,"credentials","","This method can be used to specify the username and password\nthat should be used to authenticated the client when connecting to\nthe mqtt broker.",6,{"inputs":[{"name":"mqttsessionbuilder"},{"name":"str"},{"name":"str"}],"output":{"name":"mqttsessionbuilder"}}],[11,"will_message","","This method can be used to define the Will Message. Will Message is\n(acording to the mqtt 3.1.1 documentation) a message that will be published to the\nin this method specified topic when the unexpected connection lost between\nclient and broker occures.",6,{"inputs":[{"name":"mqttsessionbuilder"},{"name":"str"},{"name":"str"},{"name":"u8"},{"name":"bool"}],"output":{"name":"mqttsessionbuilder"}}],[11,"keep_alive","","This method can be used to define how often should the broker expect a\nkeep alive message from client. The time period is defined in seconds.",6,{"inputs":[{"name":"mqttsessionbuilder"},{"name":"i16"}],"output":{"name":"mqttsessionbuilder"}}],[11,"clean_session","","Call of this method indicates that a clean session should be initialized.",6,{"inputs":[{"name":"mqttsessionbuilder"}],"output":{"name":"mqttsessionbuilder"}}],[11,"connect","","This method can be used to initialize the connetion between broker and client using\nparameters defined in this `MqttSessionBuilder`.",6,{"inputs":[{"name":"mqttsessionbuilder"}],"output":{"name":"result"}}],[11,"reconnect","","When connection is lost, this method can be used to reconnect.",7,{"inputs":[{"name":"mqttsession"}],"output":{"name":"bool"}}],[11,"subscribe","","This method sends a SUBSCRIBE packet to mqtt-broker.\n# Note\nCalling this method does not mean that the topic is immediately subscribed.\nTo make sure that the client subscribed successfully to topic method\n`await_subscribe_completed` should be used.",7,{"inputs":[{"name":"mqttsession"},{"name":"str"},{"name":"u8"}],"output":{"name":"subscriberesult"}}],[11,"unsubscribe","","This method sends an UNSUBSCRIBE packet to mqtt-broker.\n# Note\nCalling this method does not mean that the topic is immediately unsubscribed.\nTo make sure that the client unsubscribed the topic successfully method\n`await_unsubscribe_completed` should be used.",7,{"inputs":[{"name":"mqttsession"},{"name":"str"}],"output":{"name":"unsubscriberesult"}}],[11,"publish","","This method sends a PUBLISH packet to mqtt-broker.\n# Note\nCalling this method does not mean that a message is immediately published.\nTo make sure that the message has been successfully published to the topic, method\n`await_publish_completion` should be used.",7,{"inputs":[{"name":"mqttsession"},{"name":"str"},{"name":"vec"},{"name":"u8"}],"output":{"name":"publishresult"}}],[11,"disconnect","","This method sends DISCONNECT packet to mqtt-broker.",7,{"inputs":[{"name":"mqttsession"}],"output":null}],[11,"await_subscribe_completed","","Method waits (blocks the execution) until the topic subscription is completed.",7,{"inputs":[{"name":"mqttsession"},{"name":"i16"},{"name":"option"}],"output":{"name":"result"}}],[11,"await_unsubscribe_completed","","Method waits (blocks the execution) until the topic is\nsuccessfully unsubscribed.",7,{"inputs":[{"name":"mqttsession"},{"name":"i16"},{"name":"option"}],"output":{"name":"result"}}],[11,"await_new_message","","Method waits (blocks the execution) on a new message.",7,{"inputs":[{"name":"mqttsession"},{"name":"option"}],"output":{"name":"result"}}],[11,"await_publish_completion","","Method waits (blocks the execution) until the message publishing is completed.\n# Note\ntimeout considers only second-part of the Duration",7,{"inputs":[{"name":"mqttsession"},{"name":"i16"},{"name":"option"}],"output":{"name":"result"}}]],"paths":[[3,"ReceivedMessage"],[3,"SubscribeResult"],[3,"UnsubscribeResult"],[4,"PublishResult"],[4,"ConnectFailed"],[4,"ReceiveFailed"],[3,"MqttSessionBuilder"],[3,"MqttSession"]]};
initSearch(searchIndex);
